{
  "info": {
    "_postman_id": "09f56ea4-2784-407c-8e57-a3f83fe71366",
    "name": "Todo",
    "description": "A comprehensive API service for managing to-do items, allowing users to create, view, update, and delete tasks. Includes endpoints for task management, retrieval, and organization to enhance productivity and task tracking.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "24789738"
  },
  "item": [
    {
      "name": "auth",
      "item": [
        {
          "name": "register",
          "item": [
            {
              "name": "Register a new user",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/register",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "register"]
                },
                "description": "This endpoint allows a new user to register by providing their email, password, and other necessary details. It creates a new user in the database and returns the user's data upon successful registration."
              },
              "response": [
                {
                  "name": "User registered successfully",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "//auth/register",
                      "path": ["", "auth", "register"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 201,\n  \"message\": \"\",\n  \"data\": {}\n}"
                },
                {
                  "name": "Validation failed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/auth/register",
                      "host": ["{{baseUrl}}"],
                      "path": ["auth", "register"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 400,\n  \"message\": \"\",\n  \"error\": \"Bad Request\" \n}"
                },
                {
                  "name": "Email already in use",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/auth/register",
                      "host": ["{{baseUrl}}"],
                      "path": ["auth", "register"]
                    }
                  },
                  "status": "Conflict",
                  "code": 409,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 409,\n  \"message\": \"\",\n  \"error\": \"Conflict\" \n}"
                }
              ]
            }
          ],
          "description": "Endpoint to register a new user by providing necessary details such as email, password, etc."
        },
        {
          "name": "login",
          "item": [
            {
              "name": "Login a user",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "login"]
                },
                "description": "This endpoint allows an existing user to authenticate by providing their email and password. Upon successful authentication, it returns a JWT token that can be used for accessing protected routes in the application."
              },
              "response": [
                {
                  "name": "Login successful",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "//auth/login",
                      "path": ["", "auth", "login"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 200,\n  \"message\": \"\",\n  \"token\": \"<token>\"\n}"
                },
                {
                  "name": "Validation failed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/auth/login",
                      "host": ["{{baseUrl}}"],
                      "path": ["auth", "login"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 400,\n  \"message\": \"\",\n  \"error\": \"Bad Request\" \n}"
                },
                {
                  "name": "Invalid credentials",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/auth/login",
                      "host": ["{{baseUrl}}"],
                      "path": ["auth", "login"]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 401,\n  \"message\": \"\",\n  \"error\": \"Unauthorized\" \n}"
                }
              ]
            }
          ],
          "description": "contain endpoint to authenticate an existing user and obtain a JWT token for secure access to protected routes"
        }
      ],
      "description": "Contains authentication-related endpoints for user registration and login"
    },
    {
      "name": "todos",
      "item": [
        {
          "name": "create",
          "item": [
            {
              "name": "Create a new Todo",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{bearerToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/todos/create",
                  "host": ["{{baseUrl}}"],
                  "path": ["todos", "create"]
                },
                "description": "This endpoint allows the creation of a new to-do item by providing necessary details such as title, description, and completion status. It returns the newly created to-do item upon successful creation."
              },
              "response": [
                {
                  "name": "TODO created successfully.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "//todos/create",
                      "path": ["", "todos", "create"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 201,\n  \"message\": \"\",\n  \"data\": {}\n}"
                },
                {
                  "name": "Invalid input or missing fields.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "//todos/create",
                      "path": ["", "todos", "create"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 404,\n  \"message\": \"\",\n  \"error\": \"Bad Request\" \n}"
                }
              ]
            }
          ],
          "description": "Contains the endpoint for creating a new to-do item. It allows the user to submit the necessary details for a to-do task, such as title, description, and completion status."
        },
        {
          "name": "get all",
          "item": [
            {
              "name": "Return a list of all Todos",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{bearerToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/todos/all",
                  "host": ["{{baseUrl}}"],
                  "path": ["todos", "all"]
                },
                "description": "This endpoint retrieves a list of all to-do items. It returns an array of to-do objects with details like title, description, and completion status."
              },
              "response": [
                {
                  "name": "List of TODOs retrieved successfully.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "//todos/all",
                      "path": ["", "todos", "all"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 200,\n  \"message\": \"\",\n  \"data\": {}\n}"
                },
                {
                  "name": "No TODOs found for the user.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/todos/all",
                      "host": ["{{baseUrl}}"],
                      "path": ["todos", "all"]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 404,\n  \"message\": \"\",\n  \"error\": \"Not Found\" \n}"
                }
              ]
            }
          ],
          "description": "Contains the endpoint to retrieve a list of all to-do items. It returns all the to-dos in the system, enabling the user to view and interact with their entire to-do list."
        },
        {
          "name": "operations",
          "item": [
            {
              "name": "Retrieve Todo based on ID",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{bearerToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/todos/:id/details",
                  "host": ["{{baseUrl}}"],
                  "path": ["todos", ":id", "details"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<number>",
                      "description": "(Required) "
                    }
                  ]
                },
                "description": "This endpoint retrieves a specific to-do item by its unique ID. It returns the details of the to-do item, including title, description, and status, if found."
              },
              "response": [
                {
                  "name": "TODO retrieved successfully.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "//todos/:id/details",
                      "path": ["", "todos", ":id", "details"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 200,\n  \"message\": \"\",\n  \"data\": {}\n}"
                },
                {
                  "name": "TODO not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/todos/:id/details",
                      "host": ["{{baseUrl}}"],
                      "path": ["todos", ":id", "details"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 404,\n  \"message\": \"\",\n  \"error\": \"Not Found\" \n}"
                }
              ]
            },
            {
              "name": "Delete Todo",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{bearerToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/todos/:id/delete",
                  "host": ["{{baseUrl}}"],
                  "path": ["todos", ":id", "delete"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<number>",
                      "description": "(Required) "
                    }
                  ]
                },
                "description": "This endpoint deletes a specific to-do item by its ID. It returns a confirmation message or status indicating whether the deletion was successful."
              },
              "response": [
                {
                  "name": "TODO deleted successfully.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "//todos/:id/delete",
                      "path": ["", "todos", ":id", "delete"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 204,\n  \"message\": \"\",\n  \"error\": \"No Content\" \n}"
                },
                {
                  "name": "TODO not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/todos/:id/delete",
                      "host": ["{{baseUrl}}"],
                      "path": ["todos", ":id", "delete"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 404,\n  \"message\": \"\",\n  \"error\": \"Not Found\" \n}"
                }
              ]
            },
            {
              "name": "Update Todo",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{bearerToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"completed\": false,\n  \"title\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/todos/:id/update",
                  "host": ["{{baseUrl}}"],
                  "path": ["todos", ":id", "update"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<number>",
                      "description": "(Required) "
                    }
                  ]
                },
                "description": "This endpoint allows updating a to-do item by its ID. You can update details like title, description, and completion status. It returns the updated to-do item upon successful modification."
              },
              "response": [
                {
                  "name": "TODO updated successfully.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"completed\": false,\n  \"title\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "//todos/:id/update",
                      "path": ["", "todos", ":id", "update"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 200,\n  \"message\": \"\",\n  \"data\": {}\n}"
                },
                {
                  "name": "Invalid input or update failed.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"completed\": false,\n  \"title\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/todos/:id/update",
                      "host": ["{{baseUrl}}"],
                      "path": ["todos", ":id", "update"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 400,\n  \"message\": \"\",\n  \"error\": Bad Request\n}"
                },
                {
                  "name": "TODO not found.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"completed\": false,\n  \"title\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/todos/:id/update",
                      "host": ["{{baseUrl}}"],
                      "path": ["todos", ":id", "update"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": 404,\n  \"message\": \"\",\n  \"error\": \"Not Found\" \n}"
                }
              ]
            }
          ],
          "description": "Contains endpoints for managing a specific to-do item by its ID. This includes retrieving, updating, and deleting a to-do item based on its unique identifier."
        }
      ],
      "description": "Contains endpoints for managing to-dos, including creating, retrieving, updating, and deleting to-do items."
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "/"
    }
  ]
}
