version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - DATABASE_URL=mysql://root:${MYSQL_ROOT_PASSWORD}@db:3306/${MYSQL_DATABASE}?allowPublicKeyRetrieval=true&useSSL=false
      - JWT_SECRET=your-super-secret-key
      - JWT_EXPIRATION=24h
    volumes:
      - .:/usr/src/app
    depends_on:
      db:
        condition: service_healthy
      init-db:
        condition: service_completed_successfully
    networks:
      - my-network

  db:
    image: mysql:latest
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h localhost -uroot -p$MYSQL_ROOT_PASSWORD || exit 1']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my-network

  init-db:
    image: node:18-alpine
    container_name: init-db
    volumes:
      - ./prisma:/app/prisma
    command: >
      sh -c "
      apk add --no-cache bash &&
      npm install -g prisma &&
      prisma migrate deploy --schema=/app/prisma/schema.prisma
      "
    environment:
      DATABASE_URL: mysql://root:${MYSQL_ROOT_PASSWORD}@db:3306/${MYSQL_DATABASE}?allowPublicKeyRetrieval=true&useSSL=false
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my-network
    restart: "on-failure"

volumes:
  db-data:

networks:
  my-network:
